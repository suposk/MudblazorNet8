@inherits WeatherCompBase //Logic moved to class WeatherCompBase, to separate logic from UI

<MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server. This Should be .........  .......</MudText>

@if (IsLoading)
{
    <MudStack Row=true>
        <MudProgressCircular Color="Color.Primary" Indeterminate=@IsLoading />
        <MudText>Loading ...</MudText>
    </MudStack>
}

<MudGrid Class="align-baseline m-2">
    <MudItem md="4" xs="12">
        <MudButton Disabled="@IsLoading"
                    OnClick="@RefreshAsync"
                    Class="d-flex mud-width-full"                       
                    Color="Color.Primary"                    
                    Size="@Size.Small"
                    Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Refresh">
            Refresh
        </MudButton>
    </MudItem>

    <MudItem md="4" xs="12">
        <MudTextField @bind-Value="SearchString" Placeholder="Search" 
                        Immediate="true" DebounceInterval="300" Clearable="true"
                        Class="d-flex mud-width-full"
                        Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium">
        </MudTextField>
    </MudItem>

    <MudItem md="4" xs="12">
        <MudNumericField @bind-Value="ItemsToShowCount" 
                         @bind-Value:after="LoadAsync"
                         Label="# of Items to Show also delay" Variant="Variant.Text" Clearable=true
                         Class="d-flex mud-width-full"
                         Immediate=true DebounceInterval="900" Step="1000"
                         Disabled=@IsLoading Min="50" Max="10000" />
    </MudItem>

</MudGrid>


<MudTable Items="Collection" SortLabel="Sort By" Elevation="1" @bind-RowsPerPage=@RowsPerPage Loading=@IsLoading 
        Dense="@dense" Hover="@hover" Bordered="@bordered"
        Virtualize=true
        Filter="new Func<WeatherForecast,bool>(FilterFunc)"
        >
    <HeaderContent>
        <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<WeatherForecast, object>(x=>x.Date)">Date</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.TemperatureC)">Temp. (C)</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.TemperatureF)">Temp. (F)</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.Summary!)">Summary</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Date">@context.Date</MudTd>
        <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
        <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
        <MudTd DataLabel="Summary">@context.Summary</MudTd>
    </RowTemplate>

	<ToolBarContent>
        <MudText Typo="Typo.h6" Color=Color.Primary GutterBottom="true">Items: (@Collection?.Count)</MudText>		
	</ToolBarContent>
   
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{ 5, 10, 50, 100, 1000 }" />
    </PagerContent>
</MudTable>

<div class="d-flex flex-wrap mt-1">
    <MudSwitch @bind-Value="@hover" Color="Color.Primary">Hover</MudSwitch>
    <MudSwitch @bind-Value="@dense" Color="Color.Secondary">Dense</MudSwitch>
    <MudSwitch @bind-Value="@bordered" Color="Color.Warning">Bordered</MudSwitch>
</div>


@code {
    //some UI related code can be here    

    protected bool dense = true;
    protected bool hover = true;
    protected bool bordered = false;
    public int RowsPerPage { get; set; } = 10;

}
